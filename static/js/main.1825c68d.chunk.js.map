{"version":3,"sources":["redux/reducers/auth.js","redux/reducers/gallery.js","redux/reducers/news.js","redux/reducers/rootReducer.js","redux/store.js","components/Header.jsx","components/Login.jsx","components/Article.jsx","components/News.jsx","components/Profile.jsx","components/Slider.jsx","components/Gallery.jsx","App.js","redux/actions/gallery.js","redux/actions/news.js","redux/actions/auth.js","serviceWorker.js","index.js"],"names":["initialState","isAuth","username","password","profileImg","auth","state","action","type","payload","items","isLoading","gallery","loading","news","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Header","className","to","href","Login","setAuth","useState","currentPassword","setCurrentPassword","currentLogin","setCurrentLogin","value","onChange","e","target","console","log","placeholder","onClick","preventDefault","setTimeout","alert","Article","article","src","urlToImage","title","News","currentInput","setCurrentInput","filtredNews","setFiltredNews","useEffect","filter","toLowerCase","includes","class","currentTarget","map","index","key","Profile","Slider","images","currentIndex","setIndex","nextIndex","length","alt","Gallery","App","useSelector","dispatch","useDispatch","axios","get","then","data","hits","el","webformatURL","articles","bool","path","render","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"2PAAMA,EAAe,CACjBC,QAAQ,EACRC,SAAU,QACVC,SAAU,QACVC,WAAY,kEAkBDC,EAdF,WAAmC,IAAlCC,EAAiC,uDAAzBN,EAAcO,EAAW,uCAC3C,OAAQA,EAAOC,MAEX,IAAK,kBACD,OAAO,2BACAF,GADP,IAEIL,OAAQM,EAAOE,UAGvB,QAAS,OAAOH,ICjBlBN,EAAe,CACjBU,MAAO,GACPC,WAAW,GAcAC,EAXC,WAAmC,IAAlCN,EAAiC,uDAAzBN,EAAcO,EAAW,uCAC9C,OAAQA,EAAOC,MACX,IAAK,aACD,OAAO,2BACAF,GADP,IAEII,MAAOH,EAAOE,UAEtB,QAAS,OAAOH,ICZlBN,EAAe,CACjBU,MAAO,GACPG,SAAS,GAuBEC,EAlBF,WAAmC,IAAlCR,EAAiC,uDAAzBN,EAAcO,EAAW,uCAC3C,OAAQA,EAAOC,MAEX,IAAK,WACD,OAAO,2BACAF,GADP,IAEII,MAAOH,EAAOE,UAKtB,QAAS,OAAOH,ICPTS,EANKC,YAAgB,CAChCX,OACAO,UACAE,S,QCFEG,EAAmBC,OAAOC,sCAAwCC,IAIzDC,EAFDC,YAAYP,EAAaE,EAAiBM,YAAgBC,O,sBCOzDC,MAbf,WACI,OACI,yBAAKC,UAAU,iCACX,6BACI,kBAAC,IAAD,CAAMC,GAAG,SAASD,UAAU,eAAeE,KAAK,KAAhD,SACA,kBAAC,IAAD,CAAMD,GAAG,QAAQD,UAAU,eAAeE,KAAK,KAA/C,QACA,kBAAC,IAAD,CAAMD,GAAG,WAAWD,UAAU,eAAeE,KAAK,KAAlD,WACA,kBAAC,IAAD,CAAMD,GAAG,WAAWD,UAAU,eAAeE,KAAK,KAAlD,c,QCkCDC,MAzCf,YAAiD,IAAhC3B,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,SAAU2B,EAAW,EAAXA,QAAW,EACEC,mBAAS,IADX,mBACrCC,EADqC,KACpBC,EADoB,OAEJF,mBAAS,IAFL,mBAErCG,EAFqC,KAEvBC,EAFuB,KA2B5C,OAEI,yBAAKT,UAAU,cACX,yBAAKA,UAAU,QACX,0BAAMA,UAAU,cACZ,2BAAOU,MAAOF,EAAcG,SAxBtB,SAACC,GACnBH,EAAgBG,EAAEC,OAAOH,OACzBI,QAAQC,IAAIP,IAsBqD1B,KAAK,OAAOkC,YAAY,aAC7E,2BAAON,MAAOJ,EAAiBK,SA7BtB,SAACC,GACtBL,EAAmBK,EAAEC,OAAOH,OAC5BI,QAAQC,IAAIT,IA2B2DxB,KAAK,WAAWkC,YAAY,aACvF,4BAAQC,QAtBT,SAACL,GACZA,EAAEM,iBACFT,EAAgB,IAChBF,EAAmB,IACf/B,IAAagC,GAAgB/B,IAAa6B,GAC1CF,GAAQ,GACRe,YAAW,WACPC,MAAM,8IACP,MAIHA,MAAM,oMAUE,a,OCtBLC,MAZf,YAA+B,IAAZC,EAAW,EAAXA,QAEf,OACI,yBAAKtB,UAAU,YACX,yBAAKuB,IAAKD,EAAQE,WAAYxB,UAAU,iBACxC,yBAAKA,UAAU,aACX,uBAAGA,UAAU,aAAasB,EAAQG,UCuBnCC,MA3Bf,YAAiC,IAAjBnD,EAAgB,EAAhBA,OAAQa,EAAQ,EAARA,KAAQ,EACYiB,mBAAS,IADrB,mBACrBsB,EADqB,KACPC,EADO,OAEUvB,mBAAS,IAFnB,mBAErBwB,EAFqB,KAERC,EAFQ,KAY5B,OALAC,qBAAU,WACND,EAAe1C,EAAK4C,QAAO,SAAAV,GAAO,OAAIA,EAAQG,MAAMQ,cAAcC,SAASP,EAAaM,qBAEzF,CAACN,EAAcvC,IAGdb,EAEI,6BACI,yBAAK4D,MAAM,oBACP,2BAAOxB,SAbH,SAACC,GACjBgB,EAAgBhB,EAAEwB,cAAc1B,QAYU5B,KAAK,OAAOqD,MAAM,eAAenB,YAAY,qFAG3Ea,EAAYQ,KAAI,SAACf,EAASgB,GAAV,OAAoB,kBAAC,EAAD,CAASC,IAAKD,EAAOhB,QAASA,QAGxE,kBAAC,IAAD,CAAUrB,GAAG,YCbZuC,MAXf,YAAoD,IAAjCjE,EAAgC,EAAhCA,OAAQC,EAAwB,EAAxBA,SAAUE,EAAc,EAAdA,WACjC,OACKH,EAAoC,6BACjC,wBAAIyB,UAAU,oBAAd,6BAAwDxB,IACxD,6BACI,yBAAK+C,IAAK7C,EAAYyD,MAAM,8BAH1B,kBAAC,IAAD,CAAUlC,GAAG,YC8ChBwC,MAjDf,YAA6B,IAAXC,EAAU,EAAVA,OAAU,EACSrC,mBAAS,GADlB,mBACjBsC,EADiB,KACHC,EADG,KAuBxB,OACI,6BAEI,wBAAI5C,UAAU,eAAd,UAEA,yBAAKA,UAAU,UAEV0C,GACG,kBAAC,WAAD,KACI,4BAAQ1C,UAAU,SAASiB,QA7BhC,WACX,IAAM4B,EAAYF,EAAe,EAE7BC,EADAC,EAAY,EACHH,EAAOI,OAAS,EAGhBD,KAuBG,KACA,yBAAK7C,UAAU,OACX,yBAAKuB,IAAKmB,EAAOC,GAAeI,IAAI,YAExC,4BAAQ/C,UAAU,SAASiB,QAxB/B,WAEZ,IAAM4B,EAAYF,EAAe,EAC7BE,EAAYH,EAAOI,OAAS,EAC5BF,EAAS,GAGTA,EAASC,KAiBG,SCzBTG,MAVf,YAAsC,IAAnBN,EAAkB,EAAlBA,OACf,OADiC,EAAVnE,OAGf,6BACI,kBAAC,EAAD,CAAQmE,OAAQA,KAElB,kBAAC,IAAD,CAAUzC,GAAG,Y,uBCqCZgD,MArCf,WAEE,IAAM1E,EAAS2E,aAAY,qBAAGvE,KAAgBJ,UACxCC,EAAW0E,aAAY,qBAAGvE,KAAgBH,YAC1CC,EAAWyE,aAAY,qBAAGvE,KAAgBF,YAC1CC,EAAawE,aAAY,qBAAGvE,KAAgBD,cAC5CgE,EAASQ,aAAY,qBAAGhE,QAAsBF,SAC9CI,EAAO8D,aAAY,qBAAG9D,KAAgBJ,SAEtCmE,EAAWC,cAEjBrB,qBAAU,WACRoB,GCd6B,SAAAA,GAC7BE,IAAMC,IAAI,mEAAmEC,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACjFL,EAP6B,CACjCrE,KAAM,aACNC,QAKuByE,EAAKC,KAAKpB,KAAI,SAAAqB,GAAE,OAAIA,EAAGC,wBDa9CR,GEd2B,SAAAA,GAC3BE,IAAMC,IAAI,2FAA2FC,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACzGL,EAR2B,CAC/BrE,KAAM,WACNC,QAMqByE,EAAKI,mBFazB,IAEH,IAAMxD,EAAU,SAACyD,GACfV,EG1BqC,CACrCrE,KAAM,kBACNC,QHwBuB8E,KAGzB,OACE,kBAAC,IAAD,KACE,kBAAC,WAAD,KACE,kBAAC,EAAD,MACA,yBAAK7D,UAAU,aACb,kBAAC,IAAD,CAAO8D,KAAK,WAAWC,OAAQ,kBAAM,kBAAC,EAAD,CAASrF,WAAYA,EAAYF,SAAUA,EAAUD,OAAQA,OAClG,kBAAC,IAAD,CAAOuF,KAAK,QAAQC,OAAQ,kBAAM,kBAAC,EAAD,CAAM3E,KAAMA,EAAMb,OAAQA,OAC5D,kBAAC,IAAD,CAAOuF,KAAK,SAASC,OAAQ,kBAAM,kBAAC,EAAD,CAAO3D,QAASA,EAAS5B,SAAUA,EAAUC,SAAUA,OAC1F,kBAAC,IAAD,CAAOqF,KAAK,WAAWC,OAAQ,kBAAM,kBAAC,EAAD,CAASrB,OAAQA,EAAQnE,OAAQA,W,MIzB5DyF,QACW,cAA7BxE,OAAOyE,SAASC,UAEe,UAA7B1E,OAAOyE,SAASC,UAEhB1E,OAAOyE,SAASC,SAASC,MACvB,2DCTNC,IAASL,OACP,kBAAC,IAAD,CAAUpE,MAAOA,GACf,kBAAC,EAAD,OAEF0E,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBlB,MAAK,SAAAmB,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL/D,QAAQ+D,MAAMA,EAAMC,c","file":"static/js/main.1825c68d.chunk.js","sourcesContent":["const initialState = {\r\n    isAuth: false,\r\n    username: 'Admin',\r\n    password: '12345',\r\n    profileImg: 'https://www.cispp.org.uk/wp-content/uploads/2019/07/Person.png',\r\n}\r\n\r\n\r\nconst auth = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case 'SET_AUTH_STATUS':\r\n            return {\r\n                ...state,\r\n                isAuth: action.payload\r\n            }\r\n\r\n        default: return state\r\n    }\r\n\r\n}\r\n\r\nexport default auth;","const initialState = {\r\n    items: [],\r\n    isLoading: false,\r\n}\r\n\r\nconst gallery = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_IMAGES':\r\n            return {\r\n                ...state,\r\n                items: action.payload\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default gallery;","const initialState = {\r\n    items: [],\r\n    loading: false,\r\n}\r\n\r\n\r\n\r\nconst news = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case 'SET_NEWS':\r\n            return {\r\n                ...state,\r\n                items: action.payload\r\n            }\r\n\r\n\r\n\r\n        default: return state;\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default news;","import { combineReducers } from 'redux';\r\nimport auth from './auth';\r\nimport gallery from './gallery';\r\nimport news from './news';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth,\r\n    gallery,\r\n    news,\r\n});\r\n\r\nexport default rootReducer;","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport rootReducer from './reducers/rootReducer';\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport default store;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nfunction Header() {\r\n    return (\r\n        <nav className=\"navbar navbar-dark bg-primary\">\r\n            <div>\r\n                <Link to='/login' className=\"navbar-brand\" href=\"#\">Login</Link>\r\n                <Link to='/news' className=\"navbar-brand\" href=\"#\">News</Link>\r\n                <Link to='/profile' className=\"navbar-brand\" href=\"#\">Profile</Link>\r\n                <Link to='/gallery' className=\"navbar-brand\" href=\"#\">Gallery</Link>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { useState } from 'react'\r\n\r\nfunction Login({ username, password, setAuth }) {\r\n    const [currentPassword, setCurrentPassword] = useState('');\r\n    const [currentLogin, setCurrentLogin] = useState('');\r\n\r\n    const onChangePassword = (e) => {\r\n        setCurrentPassword(e.target.value)\r\n        console.log(currentPassword);\r\n    }\r\n    const onChangeLogin = (e) => {\r\n        setCurrentLogin(e.target.value)\r\n        console.log(currentLogin);\r\n    }\r\n    const onSend = (e) => {\r\n        e.preventDefault();\r\n        setCurrentLogin('')\r\n        setCurrentPassword('')\r\n        if (username === currentLogin && password === currentPassword) {\r\n            setAuth(true)\r\n            setTimeout(() => {\r\n                alert('вы успешно зашли в аккаунт')\r\n            }, 400)\r\n\r\n        }\r\n        else {\r\n            alert(\"Неправильно введен пароль или логин\")\r\n        }\r\n    }\r\n    return (\r\n\r\n        <div className=\"login-page\">\r\n            <div className=\"form\">\r\n                <form className=\"login-form\">\r\n                    <input value={currentLogin} onChange={onChangeLogin} type=\"text\" placeholder=\"username\" />\r\n                    <input value={currentPassword} onChange={onChangePassword} type=\"password\" placeholder=\"password\" />\r\n                    <button onClick={onSend}>login</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\n\r\nfunction Article({ article }) {\r\n\r\n    return (\r\n        <div className=\"card m-5\">\r\n            <img src={article.urlToImage} className=\"card-img-top\" />\r\n            <div className=\"card-body\">\r\n                <p className=\"card-text\">{article.title}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Article\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Article from './Article';\r\n\r\nfunction News({ isAuth, news }) {\r\n    const [currentInput, setCurrentInput] = useState('');\r\n    const [filtredNews, setFiltredNews] = useState([]);\r\n\r\n    const handleInput = (e) => {\r\n        setCurrentInput(e.currentTarget.value)\r\n    }\r\n    useEffect(() => {\r\n        setFiltredNews(news.filter(article => article.title.toLowerCase().includes(currentInput.toLowerCase())))\r\n\r\n    }, [currentInput, news])\r\n\r\n    return (\r\n        isAuth ?\r\n\r\n            <div>\r\n                <div class=\"input-group mt-5\">\r\n                    <input onChange={handleInput} type=\"text\" class=\"form-control\" placeholder=\"Поиск новостей\" ></input>\r\n                </div>\r\n                {\r\n                    filtredNews.map((article, index) => <Article key={index} article={article} />)\r\n                }\r\n            </div>\r\n            : <Redirect to='/login' />\r\n    )\r\n}\r\n\r\nexport default News\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nfunction Profile({ isAuth, username, profileImg }) {\r\n    return (\r\n        !isAuth ? <Redirect to='/login' /> : <div>\r\n            <h1 className='text-center mt-5'>{`welcome to profile ${username}`}</h1>\r\n            <div>\r\n                <img src={profileImg} class=\"rounded mx-auto d-block\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import React, { useState, Fragment } from 'react'\r\n\r\nfunction Slider({ images }) {\r\n    const [currentIndex, setIndex] = useState(0);\r\n\r\n    const onLeft = () => {\r\n        const nextIndex = currentIndex - 1;\r\n        if (nextIndex < 0) {\r\n            setIndex(images.length - 1)\r\n        }\r\n        else {\r\n            setIndex(nextIndex)\r\n        }\r\n    }\r\n    const onRight = () => {\r\n\r\n        const nextIndex = currentIndex + 1;\r\n        if (nextIndex > images.length - 1) {\r\n            setIndex(0)\r\n        }\r\n        else {\r\n            setIndex(nextIndex)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <h1 className='text-center'>Slider</h1>\r\n\r\n            <div className='slider'>\r\n\r\n                {images &&\r\n                    <Fragment>\r\n                        <button className='button' onClick={onLeft}>&lt;</button>\r\n                        <div className='img'>\r\n                            <img src={images[currentIndex]} alt=\"images\" />\r\n                        </div>\r\n                        <button className='button' onClick={onRight}>&gt;</button>\r\n                    </Fragment>\r\n\r\n\r\n                }\r\n\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Slider\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Slider from './Slider';\r\nfunction Gallery({ images, isAuth }) {\r\n    return (\r\n        isAuth ?\r\n            <div>\r\n                <Slider images={images} />\r\n            </div>\r\n            : <Redirect to='/login' />\r\n    )\r\n}\r\n\r\nexport default Gallery;\r\n","import React, { Fragment, useEffect } from 'react';\nimport { Header, Profile, News, Login, Gallery } from \"./components\";\nimport { HashRouter, Route } from 'react-router-dom';\nimport { setAuthStatus } from './redux/actions/auth';\nimport { fetchImages } from './redux/actions/gallery';\nimport { fetchNews } from './redux/actions/news';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './App.css';\n\nfunction App() {\n\n  const isAuth = useSelector(({ auth }) => auth.isAuth);\n  const username = useSelector(({ auth }) => auth.username);\n  const password = useSelector(({ auth }) => auth.password);\n  const profileImg = useSelector(({ auth }) => auth.profileImg);\n  const images = useSelector(({ gallery }) => gallery.items);\n  const news = useSelector(({ news }) => news.items)\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchImages());\n    dispatch(fetchNews());\n  }, [])\n\n  const setAuth = (bool) => {\n    dispatch(setAuthStatus(bool))\n  }\n\n  return (\n    <HashRouter>\n      <Fragment>\n        <Header />\n        <div className='container'>\n          <Route path='/profile' render={() => <Profile profileImg={profileImg} username={username} isAuth={isAuth} />} />\n          <Route path='/news' render={() => <News news={news} isAuth={isAuth} />} />\n          <Route path='/login' render={() => <Login setAuth={setAuth} username={username} password={password} />} />\n          <Route path='/gallery' render={() => <Gallery images={images} isAuth={isAuth} />} />\n        </div>\n\n\n      </Fragment>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import axios from 'axios';\r\n\r\nexport const setImages = payload => ({\r\n    type: 'SET_IMAGES',\r\n    payload\r\n})\r\n\r\nexport const fetchImages = () => dispatch => {\r\n    axios.get('https://pixabay.com/api/?key=18103494-6dfdedec769512f7eec4dcb5a').then(({ data }) => {\r\n        dispatch(setImages(data.hits.map(el => el.webformatURL)))\r\n    })\r\n}","import axios from 'axios';\r\n\r\nexport const setNews = payload => ({\r\n    type: 'SET_NEWS',\r\n    payload\r\n})\r\n\r\n\r\nexport const fetchNews = () => dispatch => {\r\n    axios.get('https://newsapi.org/v2/top-headlines?country=ru&apiKey=b9eec594da9d479c95dab871e5f2829c').then(({ data }) => {\r\n        dispatch(setNews(data.articles))\r\n    })\r\n}","export const setAuthStatus = payload => ({\r\n    type: 'SET_AUTH_STATUS',\r\n    payload\r\n})","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './redux/store';\nimport { Provider } from 'react-redux'\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}